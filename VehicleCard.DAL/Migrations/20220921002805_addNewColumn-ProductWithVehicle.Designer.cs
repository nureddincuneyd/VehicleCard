// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleCard.DAL.Context;

namespace VehicleCard.DAL.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20220921002805_addNewColumn-ProductWithVehicle")]
    partial class addNewColumnProductWithVehicle
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VehilceCard.ENT.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CapacityKG")
                        .HasColumnType("int");

                    b.Property<int>("CapacityM3")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandName = "Ford",
                            CapacityKG = 5000,
                            CapacityM3 = 10000,
                            ModelName = "F-Max",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            BrandName = "BMC",
                            CapacityKG = 5000,
                            CapacityM3 = 10000,
                            ModelName = "TGR 1846 ESS",
                            Status = true
                        });
                });

            modelBuilder.Entity("VehilceCard.ENT.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProKG")
                        .HasColumnType("int");

                    b.Property<int>("ProM3")
                        .HasColumnType("int");

                    b.Property<string>("ProName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProImgUrl = "",
                            ProKG = 150,
                            ProM3 = 300,
                            ProName = "",
                            Status = true
                        });
                });

            modelBuilder.Entity("VehilceCard.ENT.Models.ProductsWithVehicles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AvailableCapKG")
                        .HasColumnType("int");

                    b.Property<int>("AvailableCapM3")
                        .HasColumnType("int");

                    b.Property<string>("OperationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("VehiclesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductsId");

                    b.HasIndex("VehiclesId");

                    b.ToTable("ProductsWithVehicle");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableCapKG = 1500,
                            AvailableCapM3 = 350,
                            ProductsId = 1,
                            Status = true,
                            VehiclesId = 1
                        });
                });

            modelBuilder.Entity("VehilceCard.ENT.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("VehicleImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("vModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("vModelId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "İstanbul",
                            Plate = "34NE4906",
                            Status = true,
                            VehicleImgUrl = "https://cdn.cetas.com.tr/Download/resources/f-max-1_4585289922_-1x-1_false.jpg",
                            vModelId = 2
                        },
                        new
                        {
                            Id = 2,
                            Location = "İstanbul",
                            Plate = "34NE3406",
                            Status = true,
                            VehicleImgUrl = "https://bmctugra.com/_cache/croped/gallery_2019-01-10_11-53-294-1044x623.jpg",
                            vModelId = 1
                        });
                });

            modelBuilder.Entity("VehilceCard.ENT.Models.ProductsWithVehicles", b =>
                {
                    b.HasOne("VehilceCard.ENT.Models.Product", "Products")
                        .WithMany("ProductsWithVehicles")
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehilceCard.ENT.Models.Vehicle", "Vehicles")
                        .WithMany("ProductsWithVehicles")
                        .HasForeignKey("VehiclesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("VehilceCard.ENT.Models.Vehicle", b =>
                {
                    b.HasOne("VehilceCard.ENT.Models.Model", "vModel")
                        .WithMany("Vehicles")
                        .HasForeignKey("vModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vModel");
                });

            modelBuilder.Entity("VehilceCard.ENT.Models.Model", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("VehilceCard.ENT.Models.Product", b =>
                {
                    b.Navigation("ProductsWithVehicles");
                });

            modelBuilder.Entity("VehilceCard.ENT.Models.Vehicle", b =>
                {
                    b.Navigation("ProductsWithVehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
